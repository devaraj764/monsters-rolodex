{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","users","map","SearchBox","placeholder","onChange","changeHandler","App","bindlehandler","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAYgBA,MAThB,SAAeC,GACX,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCGfC,MAPf,SAAmBR,GACf,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,MAAMC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,U,YCJ7C,SAASM,EAAUX,GAC/B,OAEE,uBAAOC,UAAU,SAASW,YAAaZ,EAAMY,YAC5CC,SAAUb,EAAMc,gB,IC4BPC,E,kDA7Bd,aAAc,IAAD,8BACX,gBAYDC,cAAgB,SAACC,GAAO,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAV5D,EAAKC,MAAQ,CACXC,SAAU,GACVJ,YAAa,IALJ,E,gEAQO,IAAD,OACjBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAhB,GAAK,OAAI,EAAKS,SAAS,CAACK,SAASd,S,+BAG/B,IAAD,EACyBmB,KAAKN,MAA7BC,EADD,EACCA,SAAUJ,EADX,EACWA,YACXU,EAAmBN,EAASO,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpD,OACE,sBAAK9B,UAAU,MAAf,UACE,mBAAGA,UAAU,QAAb,8BACA,cAACU,EAAD,CAAWC,YAAY,kBAAkBE,cAAec,KAAKZ,gBACjE,cAAC,EAAD,CAAUP,MAAQoB,W,GAxBFI,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.12cd993b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nfunction Card (props){\r\n    return(\r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n export default Card;","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport Card from '../card/card.component'\r\n\r\nfunction CardList (props) {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.users.map(monster => <Card key= {monster.id} monster= {monster}/>)}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport default function SearchBox(props) {\r\n   return(\r\n\r\n     <input className=\"search\" placeholder={props.placeholder} \r\n      onChange={props.changeHandler}\r\n      />\r\n\r\n   ) \r\n}","import React, { Component } from 'react';\nimport CardList from './components/card-list/card-list.components'\nimport './App.css';\nimport SearchBox from './components/search-box/search-box.components'\n\nclass App extends Component {\n constructor(){\n   super();\n\n   this.state = {\n     monsters: [],\n     searchField: ''\n   }\n }\n componentDidMount(){\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n   .then(users => this.setState({monsters:users}));\n  }\n  bindlehandler = (e) => {this.setState({searchField: e.target.value})}\n  render(){\n    const {monsters, searchField}= this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n  return (\n    <div className=\"App\">\n      <p className=\"Title\">Monsters Rolodex</p>\n      <SearchBox placeholder=\"search monsters\" changeHandler={this.bindlehandler}/>\n  <CardList users ={filteredMonsters} />\n  </div>\n  )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}